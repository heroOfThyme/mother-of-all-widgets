---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
    {
      testimonials &&
        testimonials.map(({ title, testimonial, name, job, image }) => (
          <div class="group relative intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
            {/* Card */}
            <div class="relative bg-white dark:bg-slate-800 rounded-2xl p-8 shadow-lg dark:shadow-none dark:border dark:border-slate-700 hover:shadow-xl dark:hover:border-slate-600 transition-all duration-300 transform hover:-translate-y-1">
              {/* Quote Icon */}
              <div class="absolute -top-4 left-8">
                <div class="bg-primary/10 dark:bg-primary/20 rounded-full p-3">
                  <svg class="w-6 h-6 text-primary" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z" />
                  </svg>
                </div>
              </div>

              {/* Title */}
              {title && <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4 mt-4">{title}</h3>}

              {/* Testimonial Text */}
              {testimonial && (
                <blockquote class="text-gray-600 dark:text-gray-300 mb-6 leading-relaxed italic">
                  "{testimonial}"
                </blockquote>
              )}

              {/* Rating Stars */}
              <div class="flex gap-1 mb-6">
                {[...Array(5)].map((_, i) => (
                  <svg class="w-5 h-5 text-yellow-400 fill-current" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
                  </svg>
                ))}
              </div>

              {/* Author Info */}
              <div class="flex items-center">
                {image && (
                  <div class="flex-shrink-0 mr-4">
                    {typeof image === 'string' ? (
                      <Fragment set:html={image} />
                    ) : (
                      <Image
                        class="w-12 h-12 rounded-full object-cover border-2 border-gray-200 dark:border-gray-600"
                        width={48}
                        height={48}
                        widths={[48, 96]}
                        layout="fixed"
                        {...image}
                      />
                    )}
                  </div>
                )}

                <div>
                  {name && <div class="font-semibold text-gray-900 dark:text-white text-sm">{name}</div>}
                  {job && <div class="text-gray-500 dark:text-gray-400 text-sm">{job}</div>}
                </div>
              </div>

              {/* Decorative Corner */}
              <div class="absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-primary/5 to-transparent rounded-bl-full" />
            </div>

            {/* Floating Effect on Hover */}
            <div class="absolute inset-0 bg-gradient-to-r from-primary/5 to-secondary/5 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10 transform translate-y-2" />
          </div>
        ))
    }
  </div>

  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-12 md:mt-16 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>