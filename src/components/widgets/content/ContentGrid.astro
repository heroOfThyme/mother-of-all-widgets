---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import Image from '~/components/common/Image.astro';
import { Icon } from 'astro-icon/components';
import type { Widget } from '~/types';

export interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  items?: Array<{
    title?: string;
    description?: string;
    image?: string | { src: string; alt?: string };
    icon?: string;
    category?: string;
  }>;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  items = [],

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {
      items &&
        items.map((item, index) => (
          <div
            class={`
        group relative overflow-hidden rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 cursor-pointer
        intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade intersect-quarter
        ${index === 0 ? 'md:col-span-2 md:row-span-2' : ''}
      `}
          >
            {/* Background Image or Color */}
            <div class="relative h-64 md:h-80 lg:h-64 overflow-hidden">
              {item.image ? (
                typeof item.image === 'string' ? (
                  <div class="w-full h-full bg-gradient-to-br from-primary/20 to-secondary/20" />
                ) : (
                  <Image
                    src={item.image.src}
                    alt={item.image.alt || item.title || ''}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    width={400}
                    height={300}
                    widths={[300, 400, 600]}
                    sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw"
                  />
                )
              ) : (
                <div
                  class={`w-full h-full bg-gradient-to-br ${
                    index % 3 === 0
                      ? 'from-blue-500/20 to-purple-500/20'
                      : index % 3 === 1
                        ? 'from-green-500/20 to-blue-500/20'
                        : 'from-purple-500/20 to-pink-500/20'
                  }`}
                />
              )}

              {/* Overlay */}
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent group-hover:from-black/90 transition-all duration-300" />

              {/* Category Badge */}
              {item.category && (
                <div class="absolute top-4 left-4">
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-white/20 backdrop-blur-sm text-white border border-white/30">
                    {item.category}
                  </span>
                </div>
              )}

              {/* Icon */}
              {item.icon && (
                <div class="absolute top-4 right-4">
                  <div class="w-10 h-10 bg-white/20 backdrop-blur-sm rounded-lg flex items-center justify-center border border-white/30">
                    <Icon name={item.icon} class="w-5 h-5 text-white" />
                  </div>
                </div>
              )}
            </div>

            {/* Content Overlay */}
            <div class="absolute bottom-0 left-0 right-0 p-6 text-white">
              {item.title && (
                <h3
                  class={`font-bold text-white mb-2 group-hover:text-primary transition-colors duration-300 ${
                    index === 0 ? 'text-2xl lg:text-3xl' : 'text-xl'
                  }`}
                >
                  {item.title}
                </h3>
              )}
              {item.description && (
                <p
                  class={`text-white/90 leading-relaxed ${index === 0 ? 'text-lg' : 'text-sm'}`}
                  set:html={item.description}
                />
              )}
            </div>

            {/* Hover Effect Arrow */}
            <div class="absolute bottom-6 right-6 opacity-0 group-hover:opacity-100 transform translate-x-2 group-hover:translate-x-0 transition-all duration-300">
              <Icon name="tabler:arrow-right" class="w-5 h-5 text-white" />
            </div>
          </div>
        ))
    }
  </div>
</WidgetWrapper>
